{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 获取目标元素的样式\r\n * @param  {Object HTMLElement} el 目标元素\r\n * @return {Object}    目标元素的所有样式\r\n */\n// function _getStyle(el) {\n// \tlet style = window.getComputedStyle ? \n// \t\twindow.getComputedStyle(el, null) :\n// \t\tel.currentStyle;\n// \treturn style;\n// }\n\n// export function borderWidth(el) {\n// \tlet rect = el.getBoundingClientRect();\n// \treturn rect.width;\n// }\n\n// export function paddingWidth(el) {\n// \treturn el.clientWidth;\n// }\n\n// export function contentWidth(el) {\n// \tlet paddingWidth = el.clientWidth;\n// \tlet paddingLeft = parseInt(_getStyle(el)['paddingLeft'], 10),\n// \t\tpaddingRight = parseInt(_getStyle(el)['paddingRight'], 10);\n\n// \treturn paddingWidth - paddingLeft - paddingRight;\n// }\nvar Width = function () {\n  function Width() {\n    _classCallCheck(this, Width);\n  }\n\n  _createClass(Width, [{\n    key: \"getBorderWidth\",\n    value: function getBorderWidth(el) {\n      var rect = el.getBoundingClientRect();\n      return rect.width;\n    }\n  }, {\n    key: \"getPaddingWidth\",\n    value: function getPaddingWidth(el) {\n      return el.clientWidth;\n    }\n  }, {\n    key: \"getContentWidth\",\n    value: function getContentWidth(el) {\n      var paddingWidth = el.clientWidth;\n      var paddingLeft = parseInt(Width._getStyle(el)['paddingLeft'], 10),\n          paddingRight = parseInt(Width._getStyle(el)['paddingRight'], 10);\n\n      return paddingWidth - paddingLeft - paddingRight;\n    }\n\n    /**\r\n     * 获取目标元素的样式\r\n     * @param  {Object HTMLElement} el 目标元素\r\n     * @return {Object}    目标元素的所有样式\r\n     */\n\n  }], [{\n    key: \"_getStyle\",\n    value: function _getStyle(el) {\n      var style = window.getComputedStyle ? window.getComputedStyle(el, null) : el.currentStyle;\n      return style;\n    }\n  }]);\n\n  return Width;\n}();\n\nvar width = new Width();\nexports.default = width;"},"hash":"705c68d02cbf3e904052d6560eeac57d"}